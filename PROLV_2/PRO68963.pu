from collections import deque
def count(arr, n, answer):
    checker = {'0': [1, 0], '1': [3, 1], '2': [2, 2], '3': [1, 3], '4': [0, 1]}
    board = deque()
    for x in range(n):
        for y in range(n):
            alpha = arr[x][y]
            k = str(alpha)
            if alpha != 'X':
                if x % 2 == 0:
                    if y % 2 == 0:
                        arr[x + 1][y + 1] += arr[x][y]
                    else:
                        arr[x + 1][y] += arr[x][y]
                else:
                    if y % 2 == 0:
                        arr[x][y + 1] += arr[x][y]
                    else:
                        if k == '0' or k == '4':
                            board.append(alpha)
                        else:
                            board.append('X')
                        answer[0] += checker[k][0]
                        answer[1] += checker[k][1]
            elif alpha == 'X':
                board.append('X')
                
    return board, n//2

def reshape(arr, n):
    b = [[] for _ in range(n)]
    cnt = 0
    idx = 0
    while arr:
        ele = arr.popleft() 
        b[idx].append(ele)
        cnt += 1
        if cnt == n:
            idx += 1
            cnt = 0
    return b
def solution(arr):
    answer = [0, 0]
    n = len(arr)
    b, n = count(arr, n, answer)
    b = reshape(b, n)
    print(b)
    return answer